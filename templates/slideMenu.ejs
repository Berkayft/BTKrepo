<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PowerPoint Yönetici</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 min-h-screen">
    <div class="max-w-4xl mx-auto p-6">
        <div class="bg-white rounded-lg shadow-lg p-6">
            <!-- Başlık -->
            <h2 class="text-2xl font-bold text-gray-800 mb-6">PowerPoint Yönetici</h2>

            <!-- Form Bölümü -->
            <div class="mb-8 bg-gray-50 p-6 rounded-lg">
                <h3 class="text-lg font-semibold text-gray-700 mb-4">Yeni Sunum Oluştur</h3>
                <div class="space-y-4">
                    <div>
                        <label for="title" class="block text-sm font-medium text-gray-700 mb-1">
                            Sunum Başlığı
                        </label>
                        <input type="text" 
                               id="title" 
                               class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition"
                               placeholder="Sunum başlığını girin">
                    </div>
                    <button onclick="createPresentation()" 
                            class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition duration-150 ease-in-out">
                        Sunum Oluştur
                    </button>
                </div>
            </div>

            <!-- Sunumlar Listesi -->
            <div>
                <h3 class="text-lg font-semibold text-gray-700 mb-4">Mevcut Sunumlar</h3>
                <div id="presentations" class="space-y-2"></div>
            </div>
        </div>
    </div>

    <script>
        async function loadPresentations() {
            try {
                const response = await axios.get('/presentations');
                const presentationsDiv = document.getElementById('presentations');
                presentationsDiv.innerHTML = '';
                
                if (response.data.files.length === 0) {
                    presentationsDiv.innerHTML = `
                        <div class="text-center py-8 text-gray-500">
                            Henüz sunum oluşturulmamış
                        </div>
                    `;
                    return;
                }

                response.data.files.forEach(file => {
                    const fileDiv = document.createElement('div');
                    fileDiv.className = 'flex items-center justify-between p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition';
                    fileDiv.innerHTML = `
                        <span class="text-gray-700 font-medium">${file}</span>
                        <div class="space-x-2">
                            <button onclick="downloadPresentation('${file}')" 
                                    class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md text-sm transition">
                                İndir
                            </button>
                            <button onclick="deletePresentation('${file}')" 
                                    class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm transition">
                                Sil
                            </button>
                        </div>
                    `;
                    presentationsDiv.appendChild(fileDiv);
                });
            } catch (error) {
                showNotification('Sunumlar yüklenirken hata oluştu', 'error');
            }
        }

        async function createPresentation() {
            const title = document.getElementById('title').value;
            if (!title.trim()) {
                showNotification('Lütfen bir başlık girin', 'warning');
                return;
            }

            try {
                const response = await axios.post('/create-presentation', { title });
                showNotification('Sunum başarıyla oluşturuldu', 'success');
                document.getElementById('title').value = '';
                loadPresentations();
            } catch (error) {
                showNotification('Sunum oluşturulurken hata oluştu', 'error');
            }
        }

        function downloadPresentation(fileName) {
            window.location.href = `/download/${fileName}`;
        }

        async function deletePresentation(fileName) {
            if (confirm('Bu sunumu silmek istediğinize emin misiniz?')) {
                try {
                    await axios.delete(`/presentation/${fileName}`);
                    showNotification('Sunum başarıyla silindi', 'success');
                    loadPresentations();
                } catch (error) {
                    showNotification('Sunum silinirken hata oluştu', 'error');
                }
            }
        }

        function showNotification(message, type = 'info') {
            const colors = {
                success: 'bg-green-500',
                error: 'bg-red-500',
                warning: 'bg-yellow-500',
                info: 'bg-blue-500'
            };

            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 ${colors[type]} text-white px-6 py-3 rounded-lg shadow-lg transition-opacity duration-500`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.opacity = '0';
                setTimeout(() => notification.remove(), 500);
            }, 3000);
        }

        window.onload = loadPresentations;
    </script>
</body>
</html>