<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Slide Generator</title>
    <style>
        body {
            background-color: #f3f4f6;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
    <div class="bg-gray-100 min-h-screen flex flex-col">
        <header class="bg-white h-16 px-10 flex items-center justify-between border-b-2 border-gray-200 shadow-sm">
            <div class="flex items-center space-x-2 text-gray-400">
                <a href="/" class="text-green-700 tracking-wider font-thin text-md">
                    <img src="backSign.svg" alt="Back" class="w-12 h-12 object-cover rounded-full transition-transform duration-200 ease-in-out hover:scale-110 shadow-lg">
                </a>
                <h1 class="font-semibold text-gray-800 text-2xl">Slide Generator</h1>
            </div>
        </header>
        
        <div class="flex flex-col lg:flex-row justify-center items-center mt-8 px-4 lg:px-0">
            <div class="w-full lg:w-1/2 mx-auto">
                <form id="uploadForm" class="bg-white shadow-lg rounded-lg p-8">
                    <div class="flex flex-wrap -mx-3 mb-6">
                        <!-- Slide Name -->
                        <div class="w-full px-3 mb-6">
                            <label for="slide_name" class="block text-gray-700 text-sm font-bold mb-2 uppercase tracking-wide">Slide Name</label>
                            <input type="text" name="name" placeholder="Name" class="w-full bg-gray-50 border border-gray-300 rounded-lg py-3 px-4 text-gray-900 focus:outline-none focus:border-green-400" required>
                        </div>

                        <!-- Slide Description -->
                        <div class="w-full px-3 mb-6">
                            <label for="slide_description" class="block text-gray-700 text-sm font-bold mb-2 uppercase tracking-wide">Slide Description</label>
                            <textarea name="description" rows="4" placeholder="Description..." class="w-full bg-gray-50 border border-gray-300 rounded-lg py-3 px-4 text-gray-900 focus:outline-none focus:border-green-400" required></textarea>
                        </div>

                        <!-- Theme Selection -->
                        <div class="w-full px-3 mb-6">
                            <label class="block text-gray-700 text-sm font-bold mb-2 uppercase tracking-wide">Theme Selection</label>
                            <div class="flex justify-between items-center space-x-4">
                                <!-- Theme 1 -->
                                <div class="flex flex-col items-center mt-4">
                                    <img src="d7d7d7.svg" alt="Slide 1" class="w-42 h-42 rounded-lg shadow-md mb-2">
                                    <input type="radio" id="theme1" name="theme" value="0" class="text-green-600 focus:ring-green-400">
                                    <label for="theme1" class="text-gray-600 text-sm">Theme 1</label>
                                </div>

                                <!-- Theme 2 -->
                                <div class="flex flex-col items-center mt-4">
                                    <img src="thema1.svg" alt="Slide 2" class="w-42 h-42 rounded-lg shadow-md mb-2">
                                    <input type="radio" id="theme2" name="theme" value="1" class="text-green-600 focus:ring-green-400">
                                    <label for="theme2" class="text-gray-600 text-sm">Theme 2</label>
                                </div>

                                <!-- Theme 3 -->
                                <div class="flex flex-col items-center mt-4">
                                    <img src="thema2.svg" alt="Slide 3" class="w-42 h-42 rounded-lg shadow-md mb-2">
                                    <input type="radio" id="theme3" name="theme" value="2" class="text-green-600 focus:ring-green-400">
                                    <label for="theme3" class="text-gray-600 text-sm">Theme 3</label>
                                </div>
                            </div>
                        </div>

                        <!-- PDF Upload -->
                        <div class="w-full px-3 mb-6">
                            <label class="block text-gray-700 text-sm font-bold mb-2 uppercase tracking-wide">PDF Files</label>
                            <button type="button" id="addPdfButton" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 mb-4">+ Add PDF</button>
                            
                            <div id="pdfList" class="space-y-2"></div>
    
                            <input id="pdfFiles" type="file" class="hidden" accept=".pdf" multiple />
                        </div>

                        <!-- Submit Button -->
                        <div class="w-full px-3">
                            <button type="submit" class="w-full bg-green-600 text-white font-bold rounded-lg py-3 transition duration-300 hover:bg-green-700 focus:outline-none focus:ring-4 focus:ring-green-400">Generate</button>
                        </div>

                        <div id="message" class="w-full text-center mt-4"></div>
                    </div>
                </form>
            </div>
        </div>
    </div>

<script>
    const fileInput = document.getElementById('pdfFiles');
    const pdfList = document.getElementById('pdfList');
    const addPdfButton = document.getElementById('addPdfButton');
    const messageDiv = document.getElementById('message');
    let selectedFiles = [];

    addPdfButton.addEventListener('click', () => {
        fileInput.click();
    });

    fileInput.addEventListener('change', () => {
        const newFiles = Array.from(fileInput.files);
        selectedFiles.push(...newFiles);
        renderFileList();
        fileInput.value = '';
    });

    function renderFileList() {
        pdfList.innerHTML = '';
        selectedFiles.forEach((file, index) => {
            const fileDiv = document.createElement('div');
            fileDiv.className = "flex items-center justify-between bg-gray-100 p-3 rounded-lg shadow-md";

            const fileName = document.createElement('span');
            fileName.textContent = file.name;
            fileName.className = "text-gray-700";

            const removeButton = document.createElement('button');
            removeButton.textContent = "-";
            removeButton.className = "text-red-600 bg-transparent border-none cursor-pointer font-bold text-lg";
            removeButton.addEventListener('click', () => {
                selectedFiles.splice(index, 1);
                renderFileList();
            });
            

            const uploadButton = document.createElement('button');
            uploadButton.textContent = "Upload";
            uploadButton.className = "bg-green-500 text-white px-2 py-1 rounded-lg hover:bg-green-600 flex items-left ml-auto mr-6";

            uploadButton.addEventListener('click', async () => {
                // Create formData for the specific file
                const formData = new FormData();
                formData.append('pdf', file);

                // Add other form data
                formData.append('name', document.querySelector('input[name="name"]').value);
                formData.append('description', document.querySelector('textarea[name="description"]').value);
                const themeValue = document.querySelector('input[name="theme"]:checked')?.value;
                if (themeValue === undefined) {
                    messageDiv.innerHTML = '<p class="text-red-600">Please select a theme.</p>';
                    return;
                }
                formData.append('themaCode', themeValue);

                try {
                    const response = await axios.post('/slide/upload', formData, {
                        headers: { 'Content-Type': 'multipart/form-data' }
                    });

                    if (response.status === 200) {
                        messageDiv.innerHTML = `<p class="text-green-600">${file.name} uploaded successfully.</p>`;
                    } else {
                        messageDiv.innerHTML = `<p class="text-red-600">${response.data.error}</p>`;
                    }
                } catch (error) {
                    messageDiv.innerHTML = `<p class="text-red-600">Error uploading ${file.name}.</p>`;
                }
            });

            fileDiv.appendChild(fileName);
            fileDiv.appendChild(uploadButton);
            fileDiv.appendChild(removeButton);
            pdfList.appendChild(fileDiv);
        });
    }

    document.getElementById('uploadForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        if (selectedFiles.length === 0) {
            messageDiv.innerHTML = '<p class="text-red-600">Please add at least one PDF file.</p>';
            return;
        }

        const formData = new FormData();
        selectedFiles.forEach((file, index) => {
            formData.append(`pdf${index}`, file);
        });

        formData.append('name', document.querySelector('input[name="name"]').value);
        formData.append('description', document.querySelector('textarea[name="description"]').value);
        const themeValue = document.querySelector('input[name="theme"]:checked')?.value;
        if (themeValue === undefined) {
            messageDiv.innerHTML = '<p class="text-red-600">Please select a theme.</p>';
            return;
        }
        formData.append('themaCode', themeValue);

        try {
            const response = await axios.post('/slide/generate', formData, {
                headers: { 'Content-Type': 'multipart/form-data' }
            });

            if (response.status === 200) {
                messageDiv.innerHTML = `<p class="text-green-600">Slides generated successfully!</p>`;
            } else {
                messageDiv.innerHTML = `<p class="text-red-600">${response.data.error}</p>`;
            }
        } catch (error) {
            messageDiv.innerHTML = `<p class="text-red-600">Error generating slides.</p>`;
        }
    });
</script>
</body>
</html>
