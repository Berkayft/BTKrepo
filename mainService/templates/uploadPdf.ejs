<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Slide Generator</title>
    <style>
        body {
            background-color: #f3f4f6;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
    <div class="bg-gray-100 min-h-screen flex flex-col">
        <header class="bg-white h-16 px-10 flex items-center justify-between border-b-2 border-gray-200 shadow-sm">
            <div class="flex items-center space-x-2 text-gray-400">
                <a href="/" class="text-green-700 tracking-wider font-thin text-md">
                    <img src="backSign.svg" alt="Back" class="w-12 h-12 object-cover rounded-full transition-transform duration-200 ease-in-out hover:scale-110 shadow-lg">
                </a>
                <h1 class="font-semibold text-gray-800 text-2xl">Slide Generator</h1>
            </div>
        </header>
        
        <div class="flex flex-col lg:flex-row justify-center items-center mt-8 px-4 lg:px-0">
            <div class="w-full lg:w-1/2  mx-auto">
                <form id="uploadForm" class="bg-white shadow-lg rounded-lg p-8">
                    <div class="flex flex-wrap -mx-3 mb-6">
                        <!-- Slide Name -->
                        <div class="w-full px-3 mb-6">
                            <label for="slide_name" class="block text-gray-700 text-sm font-bold mb-2 uppercase tracking-wide">Slide Name</label>
                            <input type="text" name="name" placeholder="Name" class="w-full bg-gray-50 border border-gray-300 rounded-lg py-3 px-4 text-gray-900 focus:outline-none focus:border-green-400" required>
                        </div>

                        <!-- Slide Description -->
                        <div class="w-full px-3 mb-6">
                            <label for="slide_description" class="block text-gray-700 text-sm font-bold mb-2 uppercase tracking-wide">Slide Description</label>
                            <textarea name="description" rows="4" placeholder="Description..." class="w-full bg-gray-50 border border-gray-300 rounded-lg py-3 px-4 text-gray-900 focus:outline-none focus:border-green-400" required></textarea>
                        </div>

                        <!-- Theme Selection -->
                        <div class="w-full px-3 mb-6">
                            <label class="block text-gray-700 text-sm font-bold mb-2 uppercase tracking-wide">Theme Selection</label>
                            <div class="flex justify-between items-center space-x-4">
                                <!-- Theme 1 -->
                                <div class="flex flex-col items-center mt-4">
                                    <img src="d7d7d7.svg" alt="Slide 1" class="w-42 h-42 rounded-lg shadow-md mb-2">
                                    <input type="radio" id="theme1" name="theme" value="0" class="text-green-600 focus:ring-green-400">
                                    <label for="theme1" class="text-gray-600 text-sm">Theme 1</label>
                                </div>

                                <!-- Theme 2 -->
                                <div class="flex flex-col items-center mt-4">
                                    <img src="thema1.svg" alt="Slide 2" class="w-42 h-42 rounded-lg shadow-md mb-2">
                                    <input type="radio" id="theme2" name="theme" value="1" class="text-green-600 focus:ring-green-400">
                                    <label for="theme2" class="text-gray-600 text-sm">Theme 2</label>
                                </div>

                                <!-- Theme 3 -->
                                <div class="flex flex-col items-center mt-4">
                                    <img src="thema2.svg" alt="Slide 3" class="w-42 h-42 rounded-lg shadow-md mb-2">
                                    <input type="radio" id="theme3" name="theme" value="2" class="text-green-600 focus:ring-green-400">
                                    <label for="theme3" class="text-gray-600 text-sm">Theme 3</label>
                                </div>
                            </div>
                        </div>

                        <!-- PDF Upload -->
                        <div class="w-full px-3 mb-6">
                            <label for="pdfFile" class="cursor-pointer flex flex-col items-center justify-center w-full h-32 rounded-xl border-2 border-dashed border-green-400 bg-white p-6 text-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-green-700" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                                </svg>
                                <h2 class="mt-4 text-xl font-medium text-gray-700 tracking-wide">Your PDF</h2>
                                <p id="fileName" class="mt-2 text-gray-500 tracking-wide">Upload or drag & drop your PDF file.</p>
                                <input id="pdfFile" type="file" class="hidden" accept=".pdf" required />
                            </label>
                        </div>

                        <!-- Submit Button -->
                        <div class="w-full px-3">
                            <button type="submit" class="w-full bg-green-600 text-white font-bold rounded-lg py-3 transition duration-300 hover:bg-green-700 focus:outline-none focus:ring-4 focus:ring-green-400">Generate</button>
                        </div>

                        <div id="message" class="w-full text-center mt-4"></div>
                    </div>
                </form>
            </div>
        </div>
    </div>
<script>
    const fileInput = document.getElementById('pdfFile');
    const fileNameDisplay = document.getElementById('fileName');
    const messageDiv = document.getElementById('message');

    fileInput.addEventListener('change', () => {
        if (fileInput.files.length > 0) {
            fileNameDisplay.textContent = fileInput.files[0].name;
        } else {
            fileNameDisplay.textContent = "Upload or drag & drop your PDF file.";
        }
    });

    document.getElementById('uploadForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        if (!fileInput.files[0]) {
            messageDiv.innerHTML = '<p class="text-red-600">Please select a file.</p>';
            return;
        }

        const formData = new FormData();
        formData.append('pdf', fileInput.files[0]);
        formData.append('name', document.querySelector('input[name="name"]').value);
        formData.append('description', document.querySelector('textarea[name="description"]').value);

        const themeValue = document.querySelector('input[name="theme"]:checked')?.value;
        if (themeValue === undefined) {
            messageDiv.innerHTML = '<p class="text-red-600">Please select a theme.</p>';
            return;
        }
        formData.append('themaCode', themeValue); // Add theme code

        try {
            const response = await axios.post('/slide/upload', formData, {
                headers: { 'Content-Type': 'multipart/form-data' }
            });

            if (response.status === 200) {
                messageDiv.innerHTML = '<p class="text-green-600">File uploaded successfully.</p>';
                loadFileList();
            } else {
                messageDiv.innerHTML = `<p class="text-red-600">${response.data.error}</p>`;
            }
        } catch (error) {
            messageDiv.innerHTML = '<p class="text-red-600">Error uploading file.</p>';
        }

        fileInput.value = '';
        fileNameDisplay.textContent = "Upload or drag & drop your PDF file.";
    });

    async function loadFileList() {
        const fileListDiv = document.getElementById('fileList');

        try {
            const response = await axios.get('/slide/files');
            const files = response.data;

            fileListDiv.innerHTML = files.map((file, index) => `
                <tr>
                    <td class="p-2 text-center">${index + 1}</td>
                    <td class="p-2">${file.name}</td>
                    <td class="p-2 text-left">${file.description}</td>
                    <td class="p-2 text-center">
                        <a href="/download/${file.filename}" class="text-green-600 hover:text-green-800">Download</a>
                    </td>
                </tr>
            `).join('');
        } catch (error) {
            fileListDiv.innerHTML = '<tr><td colspan="4" class="p-4 text-center text-red-600">Error loading file list.</td></tr>';
        }
    }

    loadFileList();
</script>
</body>
</html>
